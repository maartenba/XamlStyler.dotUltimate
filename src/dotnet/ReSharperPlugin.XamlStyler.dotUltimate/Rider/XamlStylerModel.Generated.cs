//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a RdGen v1.07.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using JetBrains.Annotations;

using JetBrains.Core;
using JetBrains.Diagnostics;
using JetBrains.Collections;
using JetBrains.Collections.Viewable;
using JetBrains.Lifetimes;
using JetBrains.Serialization;
using JetBrains.Rd;
using JetBrains.Rd.Base;
using JetBrains.Rd.Impl;
using JetBrains.Rd.Tasks;
using JetBrains.Rd.Util;
using JetBrains.Rd.Text;


// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantOverflowCheckingContext


namespace JetBrains.Rider.Model
{
  
  
  /// <summary>
  /// <p>Generated from: XamlStylerModel.kt:8</p>
  /// </summary>
  public class XamlStylerModel : RdExtBase
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<string> MyString => _MyString;
    
    //private fields
    [NotNull] private readonly RdProperty<string> _MyString;
    
    //primary constructor
    private XamlStylerModel(
      [NotNull] RdProperty<string> myString
    )
    {
      if (myString == null) throw new ArgumentNullException("myString");
      
      _MyString = myString;
      _MyString.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("myString", _MyString));
    }
    //secondary constructor
    internal XamlStylerModel (
    ) : this (
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString)
    ) {}
    //deconstruct trait
    //statics
    
    
    
    protected override long SerializationHash => 5726963228597487203L;
    
    protected override Action<ISerializers> Register => RegisterDeclaredTypesSerializers;
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers)
    {
      
      serializers.RegisterToplevelOnce(typeof(IdeRoot), IdeRoot.RegisterDeclaredTypesSerializers);
    }
    
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("XamlStylerModel (");
      using (printer.IndentCookie()) {
        printer.Print("myString = "); _MyString.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  public static class SolutionXamlStylerModelEx
   {
    public static XamlStylerModel GetXamlStylerModel(this Solution solution)
    {
      return solution.GetOrCreateExtension("xamlStylerModel", () => new XamlStylerModel());
    }
  }
}
